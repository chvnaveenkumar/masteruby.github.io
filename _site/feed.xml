<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Masteruby</title>
		<description>Masteruby is ruby tutorials website</description>		
		<link>http://masteruby.github.io</link>
		<atom:link href="http://masteruby.github.io/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>How to Add Comments to Rails App with Commontator</title>
				<description>&lt;p&gt;Last time we’ve added &lt;a href=&quot;/weekly-rails/2014/08/05/how-to-add-voting-to-rails-app.html&quot;&gt;voting&lt;/a&gt;. This time I will show you how easy can be adding comments with Commontator.&lt;/p&gt;

&lt;h2 id=&quot;why-to-use-commontator&quot;&gt;Why to Use Commontator&lt;/h2&gt;

&lt;p&gt;Commontator has following advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It includes comments count&lt;/li&gt;
  &lt;li&gt;Is easy to configure&lt;/li&gt;
  &lt;li&gt;It includes creating, editing and deleting comments&lt;/li&gt;
  &lt;li&gt;You can add voting with acts_as_votable&lt;/li&gt;
  &lt;li&gt;Is customizable &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-install-commontator&quot;&gt;How to Install Commontator&lt;/h2&gt;

&lt;p&gt;First thing we need to do is to add commontator gem to Gemfile&lt;/p&gt;

&lt;h4 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;commontator&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then install it with Bundler&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can create Commontator configuration and migrations&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rake&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;commontator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And move migrations to database&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rake db:migrate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-to-use-commontator-in-our-models&quot;&gt;How to Use Commontator in Our Models&lt;/h2&gt;

&lt;p&gt;Let’s assume you’ve got two models, first is &lt;strong&gt;User&lt;/strong&gt; and second is a &lt;strong&gt;Link&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;User should be able to post comments, so add this line to your User model.&lt;/p&gt;

&lt;h4 id=&quot;appmodelsuserrb&quot;&gt;app/models/user.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;acts_as_commontator&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We want to show comments under each link, so add acts_as_commontable helper to Link model.&lt;/p&gt;

&lt;h4 id=&quot;appmodelslinkrb&quot;&gt;app/models/link.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;acts_as_commontable&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;adding-comments-route&quot;&gt;Adding Comment’s route&lt;/h2&gt;

&lt;p&gt;Next thing we need to is to add commontator’s route.&lt;/p&gt;

&lt;h4 id=&quot;configroutesrb&quot;&gt;config/routes.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;mount&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Commontator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/commontator&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;showing-comments&quot;&gt;Showing Comments&lt;/h2&gt;

&lt;p&gt;So we’ve added commontator’s helpers to our model, so we can add commontator’s thread to our views. Let’s assume we’ve got index action in links_controller.&lt;/p&gt;

&lt;h4 id=&quot;appcontrollerslinkscontrollerrb&quot;&gt;app/controllers/links_controller.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LinksController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@links&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let’s add commontator’s thread to our views.&lt;/p&gt;

&lt;h4 id=&quot;appviewslinksindexhtmlslim&quot;&gt;app/views/links/index.html.slim&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;- @links.each do |link|
  = commontator_thread(link)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you should see comments count:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/comments-count.png&quot; alt=&quot;how to add comments count in Rails&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on show comments, you should see new comment link.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/new-comment.png&quot; alt=&quot;how to add new comment in Rails&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fill in new comment form and look at the comment that we’ve created:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/showing-comment.png&quot; alt=&quot;how to show comment in Rails&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looks nice isn’t it?&lt;/p&gt;

&lt;h2 id=&quot;replacing-anonymous-with-username&quot;&gt;Replacing “Anonymous” with username&lt;/h2&gt;

&lt;p&gt;You certainly noticed that when you’ve created comment, it shows Anonymous instead of username.&lt;/p&gt;

&lt;p&gt;Let’s fix that. Find this line in commontator initializer&lt;/p&gt;

&lt;h4 id=&quot;configinitializerscommontatorrb&quot;&gt;config/initializers/commontator.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_name_proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I18n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;commontator.anonymous&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now if you have column username in users table replace previous line with following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_name_proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now if you look at your comments in a browser you should see user’s name instead of Anonymous.&lt;/p&gt;

&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;/h2&gt;

&lt;p&gt;Let’s assume you want to customize views. Run this command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rake commontator:copy:views&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should see that commontator folder was created in our views folder.&lt;/p&gt;

&lt;p&gt;That’s all for now. I hope that you liked my tutorial. If you don’t understand anything about post, feel free to ask in discussion. And if you like it, share it with your favorite social network.&lt;/p&gt;

</description>
				<pubDate>Fri, 08 Aug 2014 20:03:55 +0200</pubDate>
				<link>http://masteruby.github.io/2014/08/08/comments.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/2014/08/08/comments.html</guid>
			</item>
		
			<item>
				<title>How to Add Comments to Rails App with Commontator</title>
				<description>&lt;p&gt;Last time we’ve added &lt;a href=&quot;/weekly-rails/2014/08/05/how-to-add-voting-to-rails-app.html&quot;&gt;voting&lt;/a&gt;. This time I will show you how easy can be adding comments with Commontator.&lt;/p&gt;

&lt;h2 id=&quot;why-to-use-commontator&quot;&gt;Why to Use Commontator&lt;/h2&gt;

&lt;p&gt;Commontator has following advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It includes comments count&lt;/li&gt;
  &lt;li&gt;Is easy to configure&lt;/li&gt;
  &lt;li&gt;It includes creating, editing and deleting comments&lt;/li&gt;
  &lt;li&gt;You can add voting with acts_as_votable&lt;/li&gt;
  &lt;li&gt;Is customizable &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-install-commontator&quot;&gt;How to Install Commontator&lt;/h2&gt;

&lt;p&gt;First thing we need to do is to add commontator gem to Gemfile&lt;/p&gt;

&lt;h4 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;commontator&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then install it with Bundler&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can create Commontator configuration and migrations&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rake&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;commontator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And move migrations to database&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rake db:migrate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;how-to-use-commontator-in-our-models&quot;&gt;How to Use Commontator in Our Models&lt;/h2&gt;

&lt;p&gt;Let’s assume you’ve got two models, first is &lt;strong&gt;User&lt;/strong&gt; and second is a &lt;strong&gt;Link&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;User should be able to post comments, so add this line to your User model.&lt;/p&gt;

&lt;h4 id=&quot;appmodelsuserrb&quot;&gt;app/models/user.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;acts_as_commontator&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We want to show comments under each link, so add acts_as_commontable helper to Link model.&lt;/p&gt;

&lt;h4 id=&quot;appmodelslinkrb&quot;&gt;app/models/link.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;acts_as_commontable&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;adding-comments-route&quot;&gt;Adding Comment’s route&lt;/h2&gt;

&lt;p&gt;Next thing we need to is to add commontator’s route.&lt;/p&gt;

&lt;h4 id=&quot;configroutesrb&quot;&gt;config/routes.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;mount&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Commontator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Engine&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/commontator&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;showing-comments&quot;&gt;Showing Comments&lt;/h2&gt;

&lt;p&gt;So we’ve added commontator’s helpers to our model, so we can add commontator’s thread to our views. Let’s assume we’ve got index action in links_controller.&lt;/p&gt;

&lt;h4 id=&quot;appcontrollerslinkscontrollerrb&quot;&gt;app/controllers/links_controller.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LinksController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@links&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let’s add commontator’s thread to our views.&lt;/p&gt;

&lt;h4 id=&quot;appviewslinksindexhtmlslim&quot;&gt;app/views/links/index.html.slim&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;- @links.each do |link|
  = commontator_thread(link)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you should see comments count:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/comments-count.png&quot; alt=&quot;how to add comments count in Rails&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on show comments, you should see new comment link.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/new-comment.png&quot; alt=&quot;how to add new comment in Rails&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fill in new comment form and look at the comment that we’ve created:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/showing-comment.png&quot; alt=&quot;how to show comment in Rails&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looks nice isn’t it?&lt;/p&gt;

&lt;h2 id=&quot;replacing-anonymous-with-username&quot;&gt;Replacing “Anonymous” with username&lt;/h2&gt;

&lt;p&gt;You certainly noticed that when you’ve created comment, it shows Anonymous instead of username.&lt;/p&gt;

&lt;p&gt;Let’s fix that. Find this line in commontator initializer&lt;/p&gt;

&lt;h4 id=&quot;configinitializerscommontatorrb&quot;&gt;config/initializers/commontator.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_name_proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I18n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;commontator.anonymous&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now if you have column username in users table replace previous line with following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_name_proc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;username&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now if you look at your comments in a browser you should see user’s name instead of Anonymous.&lt;/p&gt;

&lt;h2 id=&quot;customization&quot;&gt;Customization&lt;/h2&gt;

&lt;p&gt;Let’s assume you want to customize views. Run this command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rake commontator:copy:views&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You should see that commontator folder was created in our views folder.&lt;/p&gt;

&lt;p&gt;That’s all for now. I hope that you liked my tutorial. If you don’t understand anything about post, feel free to ask in discussion. And if you like it, share it with your favorite social network.&lt;/p&gt;

</description>
				<pubDate>Fri, 08 Aug 2014 00:00:00 +0200</pubDate>
				<link>http://masteruby.github.io/weekly-rails/2014/08/08/how-to-add-comments-to-rails-app.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/weekly-rails/2014/08/08/how-to-add-comments-to-rails-app.html</guid>
			</item>
		
			<item>
				<title>How to Add Voting to Rails App</title>
				<description>&lt;p&gt;In this post I want to show to add upvotes and dowvotes using &lt;strong&gt;acts_as votable&lt;/strong&gt; gem.&lt;/p&gt;

&lt;h2 id=&quot;what-do-you-need&quot;&gt;What do You Need&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Basic Authentication with current_user helper(Devise or something else)&lt;/li&gt;
  &lt;li&gt;One model with name &lt;strong&gt;Link&lt;/strong&gt; and controller links&lt;/li&gt;
  &lt;li&gt;acts_as_votable gem installed&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-to-setup-actsasvotable&quot;&gt;How to setup acts_as_votable&lt;/h2&gt;

&lt;p&gt;Add gem acts_as_votable to your Gemfile.&lt;/p&gt;

&lt;h4 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;acts_as_votable&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And install it with bundle&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;bundle install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now generate acts_as_votable migration&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rails generate acts_as_votable:migration&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And migrate to database&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;rake db:migrate&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we’re done with preparation let’s add upvote action.&lt;/p&gt;

&lt;h2 id=&quot;adding-upvotes&quot;&gt;Adding upvotes&lt;/h2&gt;

&lt;p&gt;First thing we need to is to add acts_as_votable helper to our model.&lt;/p&gt;

&lt;h4 id=&quot;appmodelslinkrb&quot;&gt;app/models/link.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;acts_as_votable&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Helper will provide useful methods like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;upvote_by&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;upvote&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get_dislikes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Count&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;downvotes&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;get_likes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Count&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;upvotes&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can checkout all methods at acts_as_votable documentation.&lt;/p&gt;

&lt;p&gt;So now when we know how acts_as_votable can helps us, let’s add upvoting to our controller.&lt;/p&gt;

&lt;h4 id=&quot;appcontrollerslinkscontrollerrb&quot;&gt;app/controllers/links_controller.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;upvote&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upvote_by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;links_path&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;configroutesrb&quot;&gt;config/routes.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:links&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;member&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;like&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;links#upvote&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;put&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;dislike&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;links#downvote&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we’ve added two routes, one for upvoting and another for downvoting that will update current like and dislikes size in votes table. &lt;/p&gt;

&lt;p&gt;Now we need to add upvote route to our root path.&lt;/p&gt;

&lt;h4 id=&quot;appviewslinksindexhtmlslim&quot;&gt;app/views/links/index.html.slim&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;- @links.each do |link|
  = link_to &amp;quot;upvote&amp;quot;, like_link_path(link), method: :put&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you click on link, and checkout upvotes size like this in console:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;@link &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Link.find&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
@link.get_upvotes.size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You certainly noticed that nothing will happen. Of course because voting only counts when we’re signed in. Try to signin and now click on link. Now if you checkout in console, everything should work.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;@link &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Link.find&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
@link.get_upvotes.size &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;gt; 1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;adding-downvoting&quot;&gt;Adding downvoting&lt;/h2&gt;

&lt;p&gt;Adding downvoting to rails app is reversed process to upvoting, so instead of &lt;strong&gt;upvote_by&lt;/strong&gt; you will add &lt;strong&gt;downvote_by&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;appcontrollerslinkscontrollerrb-1&quot;&gt;app/controllers/links_controller.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;downvote&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@link&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;downvote_by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_user&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;links_path&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Add path to links path. &lt;/p&gt;

&lt;h4 id=&quot;appviewslinksindexhtmlslim-1&quot;&gt;app/views/links/index.html.slim&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;= link_to &amp;quot;downvote&amp;quot;, dislike_link_path(link), method: :put&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;showing-links-score&quot;&gt;Showing link’s score&lt;/h2&gt;

&lt;p&gt;Next thing we need to is to add link’s score. Adding score is easy, thanks to methods get_upvotes.size and get_downvotes.size we can just add score method to our model.&lt;/p&gt;

&lt;h4 id=&quot;appmodelslinkrb-1&quot;&gt;app/models/link.rb&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;score&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_upvotes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_downvotes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And this to your view file&lt;/p&gt;

&lt;h4 id=&quot;appviewslinksindexhtmlslim-2&quot;&gt;app/views/links/index.html.slim&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;= link.score&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now if you click on link, you should see that our score is automatically updated by downvotes and upvotes.&lt;/p&gt;

&lt;p&gt;That’s all for now, if you don’t understand anything, feel free to ask in discussion. &lt;/p&gt;
</description>
				<pubDate>Tue, 05 Aug 2014 00:00:00 +0200</pubDate>
				<link>http://masteruby.github.io/weekly-rails/2014/08/05/how-to-add-voting-to-rails-app.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/weekly-rails/2014/08/05/how-to-add-voting-to-rails-app.html</guid>
			</item>
		
			<item>
				<title>Tags</title>
				<description>&lt;ul&gt;
  &lt;li&gt;rails generate model Post title:string body:post&lt;/li&gt;
  &lt;li&gt;gem ‘acts-as-taggable-on’&lt;/li&gt;
  &lt;li&gt;bundle install&lt;/li&gt;
  &lt;li&gt;rake acts_as_taggable_on_engine:install:migrations&lt;/li&gt;
  &lt;li&gt;rake db:migrate&lt;/li&gt;
  &lt;li&gt;acts_as_taggable &lt;em&gt;*to Post&lt;/em&gt; &lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Sun, 03 Aug 2014 16:22:48 +0200</pubDate>
				<link>http://masteruby.github.io/2014/08/03/tags.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/2014/08/03/tags.html</guid>
			</item>
		
			<item>
				<title>How to Run Tests in Vim</title>
				<description>&lt;p&gt;Last time I’ve show you some &lt;a href=&quot;&quot;&gt;vim plugins for ruby&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This time I want to show you how and why you should run your tests inside Vim. We’ll use following Vim plugins in this tutorial:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;vim-rspec&lt;/li&gt;
  &lt;li&gt;vim-dispatch&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;why-to-run-tests-inside-vim&quot;&gt;Why to Run Tests inside Vim&lt;/h2&gt;

&lt;h2 id=&quot;running-tests-with-rspec&quot;&gt;Running tests with Rspec&lt;/h2&gt;

&lt;p&gt;Running test with vim-rspec is reallyeasy. First let’s add some mapping to our .vimrc&lt;/p&gt;

&lt;h3 id=&quot;configuring-rspec&quot;&gt;Configuring Rspec&lt;/h3&gt;

&lt;p&gt;For easy using it’s better to use following vim-mappings in vim-rspec.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;map &amp;lt;Leader&amp;gt;t :call RunCurrentSpecFile&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&amp;lt;CR&amp;gt;
map &amp;lt;Leader&amp;gt;a :call RunAllSpecs&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&amp;lt;CR&amp;gt;
map &amp;lt;Leader&amp;gt;s :call RunNearestSpec&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&amp;lt;CR&amp;gt;
map &amp;lt;Leader&amp;gt;l :call RunLastSpec&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&amp;lt;CR&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Maybe you wonder what’s **&lt;leader&gt;** in .vimrc. Leader is default key, default **\**. So we&#39;ve set .vimrc, so to instead running long functions in command mode in Vim, we&#39;ve use simple&lt;/leader&gt;&lt;/p&gt;

&lt;h3 id=&quot;running-current-spec-file-with-vim-rspec&quot;&gt;Running current spec file with Vim-Rspec&lt;/h3&gt;

&lt;p&gt;Let’s assume you’ve created feature spec, with name &lt;strong&gt;users&lt;/strong&gt; and you wantto run only this spec right now. Before vim-rspec you needed to switch tmux session to run tests or open up new terminal window, not anymore&lt;/p&gt;

&lt;p&gt;So to run current spec, just run:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And vim-rspec will take work running rspec
### Running all specs&lt;/p&gt;

&lt;h3 id=&quot;running-nearest-spec&quot;&gt;Running nearest spec&lt;/h3&gt;

&lt;h3 id=&quot;running-last-spec&quot;&gt;Running last spec&lt;/h3&gt;

&lt;h2 id=&quot;using-dispatch-to-run-tests&quot;&gt;Using Dispatch to Run tests&lt;/h2&gt;
</description>
				<pubDate>Sun, 03 Aug 2014 08:08:14 +0200</pubDate>
				<link>http://masteruby.github.io/2014/08/03/tests.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/2014/08/03/tests.html</guid>
			</item>
		
			<item>
				<title>Vim4rails</title>
				<description>&lt;p&gt;If you’re Rails developer, you maybe thinking how to use Vim with Rails.&lt;/p&gt;

&lt;p&gt;In this guide I want to present usingsome tasks. &lt;/p&gt;

&lt;h2 id=&quot;running-rails-server-in-background&quot;&gt;1. Running Rails Server in Background&lt;/h2&gt;

&lt;p&gt;First task we’ll cover how to use Rails Server, but still won’t leave Vim&lt;/p&gt;

&lt;h2 id=&quot;running-multiple-files-in-terminal-window&quot;&gt;2. Running Multiple Files in Terminal Window&lt;/h2&gt;

&lt;h2 id=&quot;running-tests-inside-vim&quot;&gt;3. Running Tests Inside Vim&lt;/h2&gt;

&lt;h2 id=&quot;editing-controllers-models-and-views-is-easier-with-vim&quot;&gt;4. Editing controllers, models and views is easier with Vim&lt;/h2&gt;

&lt;h2 id=&quot;generators-using-vim&quot;&gt;5. Generators using Vim&lt;/h2&gt;

&lt;h2 id=&quot;searching-for-files-with-ctrlp&quot;&gt;6. Searching for files with CTRLp&lt;/h2&gt;

&lt;h2 id=&quot;section&quot;&gt;7.&lt;/h2&gt;
</description>
				<pubDate>Wed, 30 Jul 2014 19:25:03 +0200</pubDate>
				<link>http://masteruby.github.io/2014/07/30/vim4rails.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/2014/07/30/vim4rails.html</guid>
			</item>
		
			<item>
				<title>How to convert Ruby source code to pdf in Linux</title>
				<description>&lt;p&gt;In this post I want to show to convert source code to pdf using Linux. We’ll use file &lt;strong&gt;base.rb&lt;/strong&gt; from &lt;strong&gt;Sinatra&lt;/strong&gt; framework as example.&lt;/p&gt;

&lt;h2 id=&quot;converting-ruby-source-code-to-html&quot;&gt;Converting Ruby source code to HTML&lt;/h2&gt;

&lt;p&gt;First thing we need to is to convert our source code to html. To convert it we’ll use &lt;strong&gt;code2html&lt;/strong&gt;. Install it right now:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install code2html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We want to convert &lt;strong&gt;base.rb&lt;/strong&gt; file from Sinatra source code. We want to include line numbers in our conversion so we’ll use flag -n to add them.&lt;/p&gt;

&lt;p&gt;Let’s convert it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;code2html -n base.rb base.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Code2html will take work for conversion. Look at our converted file in browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/src2html.png&quot; alt=&quot;how to convert source code to html&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s see, our source code is well formated with proper indentation, syntax highlighting and line numbers.&lt;/p&gt;

&lt;h2 id=&quot;converting-source-code-to-pdf&quot;&gt;Converting source code to pdf&lt;/h2&gt;

&lt;p&gt;For converting source code to pdf we can use multiple tools, we’ll start with &lt;strong&gt;Libre Office&lt;/strong&gt;. &lt;/p&gt;

&lt;h3 id=&quot;converting-html-source-code-using-libreoffice&quot;&gt;Converting HTML source code using LibreOffice&lt;/h3&gt;

&lt;p&gt;If you haven’t already installed LibreOffice, you can do it now.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install libreoffice&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Open your file in LibreOffice Writter and choose &lt;strong&gt;Export&lt;/strong&gt; like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/export-file.png&quot; alt=&quot;how to export file  in libre office&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Choose PDF from menu&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/export-file-2.png&quot; alt=&quot;how to convert html file to pdf&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on export.&lt;/p&gt;

&lt;p&gt;Now you can take a look at PDF file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/html2pdf-libre-office.png&quot; alt=&quot;how to convert html to pdf in libre office&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looks nice isn’t it. It includes syntax highlighting and indentation. Of course you can use other tools, for example &lt;strong&gt;pandoc&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;using-pandoc-to-convert-html-source-code-to-pdf&quot;&gt;Using Pandoc to convert HTML source code to PDF&lt;/h3&gt;

&lt;p&gt;If you’re looking for other solution you can use Pandoc.&lt;/p&gt;

&lt;p&gt;First install it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;sudo apt-get install pandoc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now when we have pandoc installed we can use it to convert our source code.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sh&quot; data-lang=&quot;sh&quot;&gt;pandoc base.html -o base.pdf&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We’ve specified -o flag here, what is output. Take look at the file. &lt;/p&gt;

&lt;h3 id=&quot;converting-html-using-online-pdf-converter&quot;&gt;Converting HTML using online PDF converter&lt;/h3&gt;

&lt;p&gt;For converting HTML, we can try great tool for converting webpages and HTML files. Go to &lt;a href=&quot;https://pdfcrowd.com&quot;&gt;pdfcrowd&lt;/a&gt; website.&lt;/p&gt;

&lt;p&gt;First click on convert HTML file&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/pdfcrowd.png&quot; alt=&quot;how to convert HTML to PDf online&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then upload file from your and click on &lt;strong&gt;convert to pdf&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your file should like previous one.&lt;/p&gt;

&lt;p&gt;Ok so we’re at the end of our tutorial. If you like it, share it with clicking on sidebar buttons.&lt;/p&gt;
</description>
				<pubDate>Wed, 09 Jul 2014 00:00:00 +0200</pubDate>
				<link>http://masteruby.github.io/productivity-booster/2014/07/09/how-to-convert-source-code-to-pdf.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/productivity-booster/2014/07/09/how-to-convert-source-code-to-pdf.html</guid>
			</item>
		
			<item>
				<title>How to create stopwatch in Ruby Shoes</title>
				<description>&lt;p&gt;Last time we’ve created &lt;a href=&quot;/shoes/2014/06/29/how-to-create-clock-in-ruby-shoes.html&quot;&gt;digital clock&lt;/a&gt; using Time Library. Today we’ll create stopwatch.&lt;/p&gt;

&lt;p&gt;Here’s how final version will be look like:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shoes&quot; alt=&quot;how to createstopwatch in Ruby&quot; src=&quot;/images/stopwatch.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First we’ll reset Time to zero&lt;/li&gt;
  &lt;li&gt;Then we’ll add buttons for startingand reseting our stopwatch.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;adding-reseted-time&quot;&gt;Adding reseted time&lt;/h2&gt;

&lt;p&gt;First thing we need to do is to reset our time, because we want to start from zero.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Shoes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@stopwatch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@stopwatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here’s how app looks right now:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shoes&quot; alt=&quot;how to reset time in ruby&quot; src=&quot;/images/reset-time.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As in the last tutorial we’ll start with creating empty title element.&lt;/p&gt;

&lt;p&gt;Last time we’ve used new instance of Time class to save current time. Here we want to reset current time to zero, so we’ve added zero in parentheses.&lt;/p&gt;

&lt;p&gt;And on last line we’ve converted time to string and add to our title.&lt;/p&gt;

&lt;h2 id=&quot;adding-buttons-for-starting-and-reseting-stopwatch&quot;&gt;Adding buttons for starting and reseting stopwatch&lt;/h2&gt;

&lt;p&gt;We want from our stopwatch to start when we press start button and stop when press stop button.&lt;/p&gt;

&lt;p&gt;So first we’ll create start button.&lt;/p&gt;

&lt;p&gt;Add this code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Start&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We want to add every second&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Stop&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@stopwatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we’ve reset our time again to zero.&lt;/p&gt;

&lt;p&gt;Here’s the final code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;green_shoes&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Shoes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@stopwatch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@stopwatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Start&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@stopwatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  
  &lt;span class=&quot;n&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Stop&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@stopwatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I hope that you like my article, if you like it share it with clicking on buttons on the left sidebar.&lt;/p&gt;

</description>
				<pubDate>Fri, 04 Jul 2014 08:03:26 +0200</pubDate>
				<link>http://masteruby.github.io/2014/07/04/stopwatch.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/2014/07/04/stopwatch.html</guid>
			</item>
		
			<item>
				<title>How to create digital clock in Ruby Shoes</title>
				<description>&lt;p&gt;In this post I want to show how to create digital clock using Shoes.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shoes&quot; src=&quot;/images/clock.png&quot; alt=&quot;how to create clock in Ruby&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clock is first in following series of tutorials about using Time library in Shoes. Next time we’ll look at stopwatch and timer.&lt;/p&gt;

&lt;p&gt;You can find out example code on &lt;a href=&quot;https://github.com/MilosDolobac/green-shoes-apps&quot;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here’s what we’ve in front of us.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First we’ll add current time with Ruby Time library and append in to title element&lt;/li&gt;
  &lt;li&gt;Then we’ll add automatic update to current time&lt;/li&gt;
  &lt;li&gt;And we’ll add some styling to our clock&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;adding-current-time-to-our-app&quot;&gt;Adding current Time to our app.&lt;/h2&gt;

&lt;p&gt;First thing we need to do is add current time. We’ll use Time library for this. Create ruby file &lt;strong&gt;clock.rb&lt;/strong&gt; and add this code:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;green_shoes&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Shoes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;230&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you run our app right now, you should see something like this:&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;shoes&quot; src=&quot;/images/adding-time.png&quot; alt=&quot;adding current time in ruby&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Take look at the code we’ve just done.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We’ll store our clock in element title with name &lt;strong&gt;@clock&lt;/strong&gt;. We didn’t usetitle until now, so you need to know that difference between title and para is that para is 12px high and titleis 34px high. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;On a first line we’ve created instance of Ruby Time class. On second line we’ve converted only hours, minutes, and seconds to string for using in our title.&lt;/p&gt;

&lt;h2 id=&quot;updating-clock&quot;&gt;Updating clock&lt;/h2&gt;

&lt;p&gt;Our clock isn’t working well. We want to update clock after every change in time. Updating is very simple. Just add this code.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;green_shoes&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Shoes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run your app now, it should update clock every second. &lt;/p&gt;

&lt;h2 id=&quot;adding-some-style-to-clock&quot;&gt;Adding some style to clock&lt;/h2&gt;

&lt;p&gt;Our clock isn’t looking very good. Let’s fix it, replace code with clock text with this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Take last look at the code we’ve just done:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;green_shoes&amp;#39;&lt;/span&gt;

&lt;span class=&quot;no&quot;&gt;Shoes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;230&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
      &lt;span class=&quot;vi&quot;&gt;@clock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;%H:%M:%S&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;So here we’ve set color of clock numbers to green and background to black.&lt;/p&gt;

&lt;p&gt;Now we’re done. Have some ideas how to improve clock? Feel free to add changes to github.&lt;/p&gt;
</description>
				<pubDate>Sun, 29 Jun 2014 00:00:00 +0200</pubDate>
				<link>http://masteruby.github.io/shoes/2014/06/29/how-to-create-clock-in-ruby-shoes.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/shoes/2014/06/29/how-to-create-clock-in-ruby-shoes.html</guid>
			</item>
		
			<item>
				<title>Post It</title>
				<description>
</description>
				<pubDate>Mon, 16 Jun 2014 19:02:17 +0200</pubDate>
				<link>http://masteruby.github.io/2014/06/16/post-it.html</link>
				<guid isPermaLink="true">http://masteruby.github.io/2014/06/16/post-it.html</guid>
			</item>
		
	</channel>
</rss>
